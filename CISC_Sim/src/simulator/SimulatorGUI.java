/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulator;

import javax.swing.*;
import java.io.*;

/**
 *
 * @author Lester
 */
public class SimulatorGUI extends javax.swing.JFrame {

    /**
     * Creates new form simulator
     */
    public SimulatorGUI() {
        initComponents();
        //hardwares ready
        sm = new SimpleMemory();
        cpu = new Processor(sm);      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        MFRTxt = new javax.swing.JTextField();
        PCTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        X0Txt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        R0Txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        MSRTxt = new javax.swing.JTextField();
        IRTxt = new javax.swing.JTextField();
        R2Txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CCTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        R3Txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        R1Txt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        OutputTxt = new javax.swing.JTextArea();
        InstructionTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        IPLCMD = new javax.swing.JButton();
        StepCMD = new javax.swing.JButton();
        RunCMD = new javax.swing.JButton();
        LoadCMD = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CodeTxt = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        MDRTxt = new javax.swing.JTextField();
        MARTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        LoadInstr = new javax.swing.JButton();
        SetR0 = new javax.swing.JButton();
        SetR1 = new javax.swing.JButton();
        SetR2 = new javax.swing.JButton();
        SetR3 = new javax.swing.JButton();
        SetPC = new javax.swing.JButton();
        SetMemory = new javax.swing.JButton();
        MemoryAddr = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        MemoryValue = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        DisplayMemory = new javax.swing.JButton();
        InputTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        KSRTxt = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        Power = new javax.swing.JToggleButton();
        jLabel23 = new javax.swing.JLabel();
        PSRTxt = new javax.swing.JTextField();
        SetFR1 = new javax.swing.JButton();
        SetFR0 = new javax.swing.JButton();
        FR1Txt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        FR0Txt = new javax.swing.JTextField();

        fileChooser.setApproveButtonText("");
        fileChooser.setApproveButtonToolTipText("");
        fileChooser.setCurrentDirectory(new java.io.File("D:\\"));
            fileChooser.setDialogTitle("Please choose a program to load");

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            jLabel8.setText("X0");

            jLabel11.setText("MAR");

            jLabel4.setText("IR");

            jLabel2.setText("R1");

            jLabel12.setText("MFR");

            jLabel9.setText("CC");

            jLabel7.setText("MSR");

            jLabel6.setText("R3");

            jLabel1.setText("R0");

            jLabel5.setText("PC");

            jLabel10.setText("MDR");

            jLabel3.setText("R2");

            OutputTxt.setEditable(false);
            OutputTxt.setColumns(20);
            OutputTxt.setRows(5);
            OutputTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
            jScrollPane1.setViewportView(OutputTxt);

            jLabel13.setText("Instr");

            IPLCMD.setText("IPL");
            IPLCMD.setEnabled(false);
            IPLCMD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    IPLCMDActionPerformed(evt);
                }
            });

            StepCMD.setText("Step");
            StepCMD.setEnabled(false);
            StepCMD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    StepCMDActionPerformed(evt);
                }
            });

            RunCMD.setText("Run");
            RunCMD.setEnabled(false);
            RunCMD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    RunCMDActionPerformed(evt);
                }
            });

            LoadCMD.setText("Load");
            LoadCMD.setEnabled(false);
            LoadCMD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    LoadCMDActionPerformed(evt);
                }
            });

            jLabel14.setText("CodeWindow");

            CodeTxt.setEditable(false);
            CodeTxt.setColumns(20);
            CodeTxt.setRows(5);
            jScrollPane2.setViewportView(CodeTxt);

            jLabel15.setText("CS 6461 Project Simulator");

            jLabel16.setText("Registers Stat");

            LoadInstr.setText("Load");
            LoadInstr.setEnabled(false);
            LoadInstr.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    LoadInstrActionPerformed(evt);
                }
            });

            SetR0.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetR0.setText("Set");
            SetR0.setEnabled(false);
            SetR0.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetR0ActionPerformed(evt);
                }
            });

            SetR1.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetR1.setText("Set");
            SetR1.setEnabled(false);
            SetR1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetR1ActionPerformed(evt);
                }
            });

            SetR2.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetR2.setText("Set");
            SetR2.setEnabled(false);
            SetR2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetR2ActionPerformed(evt);
                }
            });

            SetR3.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetR3.setText("Set");
            SetR3.setEnabled(false);
            SetR3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetR3ActionPerformed(evt);
                }
            });

            SetPC.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetPC.setText("Set");
            SetPC.setEnabled(false);
            SetPC.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetPCActionPerformed(evt);
                }
            });

            SetMemory.setText("Set");
            SetMemory.setEnabled(false);
            SetMemory.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetMemoryActionPerformed(evt);
                }
            });

            jLabel17.setText("Memory Address");

            jLabel18.setText("Value");

            jLabel19.setText("Printer");

            jLabel20.setText("CMD");

            DisplayMemory.setText("Display");
            DisplayMemory.setEnabled(false);
            DisplayMemory.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    DisplayMemoryActionPerformed(evt);
                }
            });

            InputTxt.setEnabled(false);
            InputTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    InputTxtActionPerformed(evt);
                }
            });

            jLabel21.setText("Keyboard");

            jLabel22.setText("KSR");

            Power.setText("On");
            Power.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    PowerActionPerformed(evt);
                }
            });

            jLabel23.setText("PSR");

            SetFR1.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetFR1.setText("Set");
            SetFR1.setEnabled(false);
            SetFR1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetFR1ActionPerformed(evt);
                }
            });

            SetFR0.setFont(new java.awt.Font("宋体", 0, 11)); // NOI18N
            SetFR0.setText("Set");
            SetFR0.setEnabled(false);
            SetFR0.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SetFR0ActionPerformed(evt);
                }
            });

            jLabel26.setText("FR1");

            jLabel27.setText("FR0");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel11))
                                                .addComponent(jLabel12))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(MFRTxt)
                                                .addComponent(MARTxt)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(MDRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(R3Txt, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(PCTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(IRTxt, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(R2Txt)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel16)
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addComponent(R0Txt)
                                                .addComponent(R1Txt)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9))
                                            .addGap(10, 10, 10))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CCTxt)
                                        .addComponent(X0Txt)
                                        .addComponent(MSRTxt)))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel15)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(SetR1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SetR2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SetR3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SetPC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SetR0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(11, 11, 11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(134, 134, 134)
                                    .addComponent(SetMemory)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(DisplayMemory))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel17)
                                        .addComponent(MemoryAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(28, 28, 28)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(MemoryValue, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Power)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(StepCMD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(IPLCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(36, 36, 36)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(LoadCMD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(RunCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGap(0, 16, Short.MAX_VALUE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(7, 7, 7)
                                            .addComponent(jLabel22))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel23)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(KSRTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                        .addComponent(PSRTxt))
                                    .addGap(37, 37, 37)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel21))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(FR0Txt, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                        .addComponent(FR1Txt))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(SetFR0)
                                            .addGap(30, 30, 30)
                                            .addComponent(jLabel13)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(SetFR1)
                                            .addGap(30, 30, 30)
                                            .addComponent(InstructionTxt)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(LoadInstr, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(InputTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(IPLCMD)
                            .addGap(30, 30, 30))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Power)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoadCMD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(StepCMD)
                                    .addComponent(RunCMD)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(SetR0)
                                    .addComponent(MemoryAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MemoryValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(R0Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(R1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SetR1)
                                    .addComponent(DisplayMemory)
                                    .addComponent(jLabel19)
                                    .addComponent(SetMemory)))))
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(R2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SetR2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(R3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(SetR3))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(SetPC)
                                            .addComponent(PCTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(IRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(CCTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(X0Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(MSRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(MFRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(MARTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(MDRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PSRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23)))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(KSRTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FR0Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SetFR0)
                                .addComponent(jLabel27)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FR1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SetFR1)
                                .addComponent(InstructionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LoadInstr)
                                .addComponent(jLabel26))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21)
                        .addComponent(InputTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    //"0" Complement for n bits
    private static String Complement(String binary,int n) {
        int complement = n - binary.length();
        int k;
        if (complement == 0) {
            return binary;
        } else {
            for (k = 1; k <= complement; k++) {
                binary = "0" + binary;
            }
            return binary;
        }
    }

    //Assign values to controls for the display
    public void display() {
        //for printer output
        if(Printer.checkSR()==1){
            //System.out.println("ready");
            output(Printer.getline());
            //System.out.println(Printer.getline());
            Printer.clear();
        }
        //new added by Lester
        if(Printer.getString().equals("")==false){
         output(Printer.getString());
         Printer.floatString="";
        }
        
        //processor error status display
        if (cpu.stop == true) {
            output("HALT: Program execution halted");            
        }

        if (cpu.error == true) {
            output("Error, program execution halted");
            cpu.error = false;
        }

        if (cpu.invalidInstr == true) {
            output("Invalid Instruction: " + this.Complement(Integer.toBinaryString(cpu.getIR()),16));
            cpu.invalidInstr = false;
        } 
        
        R0Txt.setText(Complement(Integer.toBinaryString(cpu.getGPRs(0)),16));
        R1Txt.setText(Complement(Integer.toBinaryString(cpu.getGPRs(1)),16));
        R2Txt.setText(Complement(Integer.toBinaryString(cpu.getGPRs(2)),16));
        R3Txt.setText(Complement(Integer.toBinaryString(cpu.getGPRs(3)),16));
        PCTxt.setText(Complement(Integer.toBinaryString(cpu.getPC()),16));
        IRTxt.setText(Complement(Integer.toBinaryString(cpu.getIR()),16));
        CCTxt.setText(Complement(Integer.toBinaryString(cpu.getCC()),4));
        X0Txt.setText(Complement(Integer.toBinaryString(cpu.getX0()),16));
        MSRTxt.setText(Complement(Integer.toBinaryString(cpu.getMSR()),16));
        MFRTxt.setText(Complement(Integer.toBinaryString(cpu.getMFR()),4));
        MARTxt.setText(Complement(Integer.toBinaryString(sm.getMAR()),16));
        MDRTxt.setText(Complement(Integer.toBinaryString(sm.getMDR()),16));
        KSRTxt.setText(String.valueOf(Keyboard.checkSR()));
        PSRTxt.setText(String.valueOf(Printer.checkSR()));
        FR0Txt.setText(Complement(Integer.toBinaryString(cpu.getFRs(0)),32));
        FR1Txt.setText(Complement(Integer.toBinaryString(cpu.getFRs(1)),32));
        
        
        //focus the last line of printer
        OutputTxt.select(OutputTxt.getText().length(),OutputTxt.getText().length());
    }

    //output method for reference from outside
    private void output(String output) {
        OutputTxt.setText(OutputTxt.getText() + output + "\n");
    }

    //Load button action event
    private void LoadCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadCMDActionPerformed
        //initialize code window
        CodeTxt.setText("");
        //programCounter=0;
        cpu.setPC(4);
        //open file browser
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                FileReader filereader = new FileReader(file);
                BufferedReader buffer = new BufferedReader(filereader);
                //Store instructions into memory
                while (true) {
                    String instr = buffer.readLine();
                    //until the last line
                    if (instr == null) break;
                    //if readline is not blank
                    if(!instr.equals("")){
                        //and not an annotation
                        if(!instr.substring(0, 2).equals("//")){                        
                            //MAR fetch addr from PC
                            sm.setMAR(cpu.getPC());
                            String instr1=Assembler.toMC(instr);
                            sm.setMDR(Integer.parseInt(instr1, 2));
                            sm.writeWord();
                            cpu.setPC(cpu.getPC() + 1);
                            //Display in Code box
                            CodeTxt.setText(CodeTxt.getText() + "PC at " + PCTxt.getText() + "\n" + "Assembly Code: " + instr + "\n"+"Machine Code: " + instr1 + "\n"+ "\n");
                            //Show results
                            display();
                        }
                    }
                    
                }
            } catch (IOException ex) {
                System.out.println("problem accessing file " + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_LoadCMDActionPerformed

    private void IPLCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPLCMDActionPerformed
        //need to be complete
        sm.clear();
        cpu.clear();
        cpu.setPC(4);
        //c(2)=1024; X0=c(2)
        sm.setMemoryValue(2,1024);
        //reserved for X0 (instr no.)
        sm.setMemoryValue(3,64);
        cpu.setX0(1024);
        display();
        OutputTxt.setText("");
        CodeTxt.setText("");
        
        //Wei Lin added, set the user-specified instruction for 16 traps subroutine
        sm.setMemoryValue(0, 0); //entry of subroutine table
        
        output("IPL successfully\nplease load program or input instruction");
    }//GEN-LAST:event_IPLCMDActionPerformed

    private void LoadInstrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadInstrActionPerformed
        //get instr from textbox
        String instr=InstructionTxt.getText();
        //To judge whether it is an machine code (or assembly language code)
        boolean digit = true;    
        for (int i = 0; i < instr.length(); i++) {
            if (!Character.isDigit(instr.charAt(i))&&(instr.charAt(i)!=' ')) {
                digit = false;
                break;
            }
        }       
        //MAR fetch addr from PC
        sm.setMAR(cpu.getPC());
        //for machine code
        if (digit)instr=instr.replaceAll(" ","");
        //for assembly language code
        else instr=Assembler.toMC(instr);
        sm.setMDR(Integer.parseInt(instr, 2));
        sm.writeWord();
        cpu.setPC(cpu.getPC() + 1);
        
        //Display in Output box
        output("Instruction load successfully" + "     PC=" + PCTxt.getText());
        //Display in Code box
        if (digit)
        CodeTxt.setText(CodeTxt.getText() + "PC at " + PCTxt.getText() + "\n" +"Machine Code: " + InstructionTxt.getText() + "\n");
        else 
            CodeTxt.setText(CodeTxt.getText() + "PC at " + PCTxt.getText() + "\n" + "Assembly Code: " + InstructionTxt.getText() + "\n"+"Machine Code: " + instr + "\n"+ "\n");
        //clear the textbox
        InstructionTxt.setText("");
        //Show results
        display();
    }//GEN-LAST:event_LoadInstrActionPerformed

    //private void InputTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputTxtActionPerformed
    //}//GEN-LAST:event_InputTxtActionPerformed
    private void SetMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetMemoryActionPerformed
        if (Integer.parseInt(MemoryAddr.getText(), 2) >= 2) {
            sm.setMAR(Integer.parseInt(MemoryAddr.getText(), 2));
            sm.setMDR(Integer.parseInt(MemoryValue.getText(), 2));
            sm.writeWord();
            MemoryAddr.setText(Complement(MemoryAddr.getText(),16));
            MemoryValue.setText(Complement(MemoryValue.getText(),16));
            output("Memory has been set successfully");
        } else {
            output("Memory address 00,01,11 are reserved, please use another memory address");
        }
    }//GEN-LAST:event_SetMemoryActionPerformed

    private void SetR0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetR0ActionPerformed
        cpu.setGPRs(0, Integer.parseInt(R0Txt.getText(), 2));
        output("R0 has been set successfully");
        display();
    }//GEN-LAST:event_SetR0ActionPerformed

    private void SetR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetR1ActionPerformed
        cpu.setGPRs(1, Integer.parseInt(R1Txt.getText(), 2));
        output("R1 has been set successfully");
        display();
    }//GEN-LAST:event_SetR1ActionPerformed

    private void SetR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetR2ActionPerformed
        cpu.setGPRs(2, Integer.parseInt(R2Txt.getText(), 2));
        output("R2 has been set successfully");
        display();
    }//GEN-LAST:event_SetR2ActionPerformed

    private void SetR3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetR3ActionPerformed
        cpu.setGPRs(3, Integer.parseInt(R3Txt.getText(), 2));
        output("R3 has been set successfully");
        display();
    }//GEN-LAST:event_SetR3ActionPerformed

    private void SetPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetPCActionPerformed
        if (Integer.parseInt(PCTxt.getText(), 2) >= 4) {
            cpu.setPC(Integer.parseInt(PCTxt.getText(), 2));
            output("PC has been set successfully");
        } else {
            output("Please input a PC value greater than binary 11");
        }
        display();
    }//GEN-LAST:event_SetPCActionPerformed

    private void StepCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StepCMDActionPerformed
        String tempPC = PCTxt.getText();
        step=1;
        //cpu starts to work
        Thread cput=new Thread(cpu);
        cput.start();
        try{
            Thread.sleep(1);
            if(cpu.stop==false){
                output("Instruction at " + tempPC + " has been executed successfully");
            }
            if (step != 17) {
//                output("TRAP into subroutine #" + cpu.trapNumber);
 //               cpu.trapNumber = 17;
            }
        }
        catch(InterruptedException e){
            
        }      
    }//GEN-LAST:event_StepCMDActionPerformed

    private void DisplayMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayMemoryActionPerformed
        MemoryAddr.setText(Complement(MemoryAddr.getText(),16));
        MemoryValue.setText(Complement(Integer.toBinaryString(sm.getMemoryValue(Integer.parseInt(MemoryAddr.getText(), 2))),16));
    }//GEN-LAST:event_DisplayMemoryActionPerformed

    private void RunCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunCMDActionPerformed
        //set PC to first instruction
        //cpu.clear();needs to be modified
        cpu.setPC(4);         
        run=1;
        //cpu starts to work
        Thread cput=new Thread(cpu);
        cput.start();     
        
    }//GEN-LAST:event_RunCMDActionPerformed

    private void InputTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputTextActionPerformed
        if(InputTxt.getText().equals("")==false){
        Keyboard.writeString(InputTxt.getText());
        Keyboard.setSR(1);
        InputTxt.setText("");        
        }
        //for test
        //for(Keyboard.pointer=0;Keyboard.pointer<Keyboard.length;Keyboard.pointer++)
        //System.out.print(Keyboard.getChar());
    }//GEN-LAST:event_InputTextActionPerformed

    private void PowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerActionPerformed
        //Turn on GUI controls
        IPLCMD.setEnabled(true);
        StepCMD.setEnabled(true);
        LoadCMD.setEnabled(true);
        RunCMD.setEnabled(true);
        SetMemory.setEnabled(true);
        DisplayMemory.setEnabled(true);
        LoadInstr.setEnabled(true);
        InputTxt.setEnabled(true);
        SetR0.setEnabled(true);
        SetR1.setEnabled(true);
        SetR2.setEnabled(true);
        SetR3.setEnabled(true);
        SetFR0.setEnabled(true);
        SetFR1.setEnabled(true);
        SetPC.setEnabled(true);

        //Initialize GUI labels
        R0Txt.setText("0000000000000000");
        R1Txt.setText("0000000000000000");
        R2Txt.setText("0000000000000000");
        R3Txt.setText("0000000000000000");
        FR0Txt.setText("00000000000000000000000000000000");
        FR1Txt.setText("00000000000000000000000000000000");
        PCTxt.setText("0000000000000000");
        IRTxt.setText("0000000000000000");
        CCTxt.setText("0000");
        X0Txt.setText("0000000000000000");
        MSRTxt.setText("0000000000000000");
        MFRTxt.setText("0000");
        MARTxt.setText("0000000000000000");
        MDRTxt.setText("0000000000000000");
        KSRTxt.setText("0");
        MemoryValue.setText("");
        MemoryAddr.setText("");
        InstructionTxt.setText("");
        InputTxt.setText("");
        OutputTxt.setText("");
        CodeTxt.setText("");
        //Initialize parameters        
        cpu.setGPRs(0, 0);
        cpu.setGPRs(1, 0);
        cpu.setGPRs(2, 0);
        cpu.setGPRs(3, 0);
        cpu.setFRs(0, 0);
        cpu.setFRs(1, 0);
        cpu.setPC(0);
        cpu.setIR(0);
        cpu.setCC(0);
        cpu.setX0(0);
        cpu.setMSR(0);
        cpu.setMFR(0);
        sm.setMAR(0);
        sm.setMDR(0);
        //programCounter=0;
    }//GEN-LAST:event_PowerActionPerformed

    private void SetFR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetFR1ActionPerformed
        // TODO add your handling code here:
        String FR1=FR1Txt.getText();
        if(FR1.length()==32&&FR1.substring(0,1).equals("1")){
            FR1="-"+FR1.substring(1);
        }            
        cpu.setFRs(1,Integer.parseInt(FR1,2));
        display();
    }//GEN-LAST:event_SetFR1ActionPerformed

    private void SetFR0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetFR0ActionPerformed
        // TODO add your handling code here:
        String FR0=FR0Txt.getText();
        if(FR0.length()==32&&FR0.substring(0,1).equals("1")){
            FR0="-"+FR0.substring(1);
        }            
       cpu.setFRs(0,Integer.parseInt(FR0,2));
       display();
    }//GEN-LAST:event_SetFR0ActionPerformed

    public static void main(String args[]) {
        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SimulatorGUI GUI=new SimulatorGUI();
                GUI.setVisible(true);
                Updater updater=new Updater(GUI);
                Thread updatert=new Thread(updater);
                updatert.start();
            }
        });

        // JJG add mode, state variables
//        enum MODE {NONE, IPL, RUN, DEBUG, STEP, OTHER};
//        enum STATE {LOAD, EXECUTE, HALT};
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CCTxt;
    private javax.swing.JTextArea CodeTxt;
    private javax.swing.JButton DisplayMemory;
    private javax.swing.JTextField FR0Txt;
    private javax.swing.JTextField FR1Txt;
    private javax.swing.JButton IPLCMD;
    private javax.swing.JTextField IRTxt;
    private javax.swing.JTextField InputTxt;
    private javax.swing.JTextField InstructionTxt;
    private javax.swing.JTextField KSRTxt;
    private javax.swing.JButton LoadCMD;
    private javax.swing.JButton LoadInstr;
    private javax.swing.JTextField MARTxt;
    private javax.swing.JTextField MDRTxt;
    private javax.swing.JTextField MFRTxt;
    private javax.swing.JTextField MSRTxt;
    private javax.swing.JTextField MemoryAddr;
    private javax.swing.JTextField MemoryValue;
    private javax.swing.JTextArea OutputTxt;
    private javax.swing.JTextField PCTxt;
    private javax.swing.JTextField PSRTxt;
    private javax.swing.JToggleButton Power;
    private javax.swing.JTextField R0Txt;
    private javax.swing.JTextField R1Txt;
    private javax.swing.JTextField R2Txt;
    private javax.swing.JTextField R3Txt;
    private javax.swing.JButton RunCMD;
    private javax.swing.JButton SetFR0;
    private javax.swing.JButton SetFR1;
    private javax.swing.JButton SetMemory;
    private javax.swing.JButton SetPC;
    private javax.swing.JButton SetR0;
    private javax.swing.JButton SetR1;
    private javax.swing.JButton SetR2;
    private javax.swing.JButton SetR3;
    private javax.swing.JButton StepCMD;
    private javax.swing.JTextField X0Txt;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    private Processor cpu;
    private SimpleMemory sm;
    //private int programCounter;
    public static int run=0;
    public static int step=0;
}